# -*- coding: utf-8 -*-
import telegram
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters
import logging
import os
from credentials import token
import pandas as pd
import yfinance as yf
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from datetime import datetime, timedelta
from connections import get_db_session
from model import Queries
import time

# init
session = get_db_session(expire_on_commit=False)
updater = Updater(token, use_context=True)
logging.basicConfig(filename='logs.log', level=logging.WARNING)
current_path = os.path.dirname(os.path.realpath(__file__))


def matrix(corr_matrix, update, context):
    fig, ax = plt.subplots(figsize=(12, 12))
    ax = sns.heatmap(corr_matrix, annot=True, cmap="BuPu")
    ax.set(xlabel='', ylabel='')
    plt.xticks(rotation=45)
    plt.yticks(rotation=45)
    plt.savefig('corr.png')
    plt.close()

    context.bot.send_message(chat_id=update.effective_chat.id,
                             parse_mode=telegram.ParseMode.MARKDOWN,
                             text='*–ú–∞—Ç—Ä–∏—Ü–∞ –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–π –¥–ª—è –ø–æ—Ä—Ç—Ñ–µ–ª—è*')
    context.bot.send_photo(chat_id=update.effective_chat.id,
                           photo=open('corr.png', 'rb'),
                           parse_mode=telegram.ParseMode.MARKDOWN)

    context.bot.send_message(chat_id=update.effective_chat.id,
                             parse_mode=telegram.ParseMode.MARKDOWN,
                             text='üî∂ –ó–Ω–∞—á–µ–Ω–∏–µ *¬´1¬ª* - —ç—Ç–æ —Å–∏–ª—å–Ω–∞—è *–ø—Ä—è–º–∞—è –∫–æ—Ä—Ä–µ–ª—è—Ü–∏—è*, –≥–æ–≤–æ—Ä—è—â–∞—è –Ω–∞–º –æ —Ç–æ–º, '
                                  '—á—Ç–æ –Ω–∞ –∑–∞–¥–∞–Ω–Ω–æ–º '
                                  '–≤—Ä–µ–º–µ–Ω–Ω–æ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª–µ'
                                  ' —Ä–æ—Å—Ç/–ø–∞–¥–µ–Ω–∏–µ–º –æ–¥–Ω–æ–≥–æ –∞–∫—Ç–∏–≤–∞ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–∞–µ—Ç—Å—è —Ä–æ—Å—Ç–æ–º/–ø–∞–¥–µ–Ω–∏–µ–º –≤—Ç–æ—Ä–æ–≥–æ.\n'
                                  '–í –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ —Ñ–æ–Ω–¥–æ–≤–æ–≥–æ —Ä—ã–Ω–∫–∞ —ç—Ç–æ –æ—á–µ–Ω—å —Ä–∏—Å–∫–æ–≤–∞–Ω–æ –∏ –∫–∞–∫ —Ä–∞–∑ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç —Å–∏—Ç—É–∞—Ü–∏—é '
                                  '¬´—Ö—Ä–∞–Ω–µ–Ω–∏—è —è–∏—Ü –≤ –æ–¥–Ω–æ–π –∫–æ—Ä–∑–∏–Ω–µ¬ª.\n\n'
                                  'üî∂ –ó–Ω–∞—á–µ–Ω–∏–µ *¬´-1¬ª* - —ç—Ç–æ —Å–∏–ª—å–Ω–∞—è *–æ–±—Ä–∞—Ç–Ω–∞—è –∫–æ—Ä—Ä–µ–ª—è—Ü–∏—è*, –≥–æ–≤–æ—Ä—è—â–∞—è –Ω–∞–º –æ —Ç–æ–º, '
                                  '—á—Ç–æ –Ω–∞ –∑–∞–¥–∞–Ω–Ω–æ–º '
                                  '–≤—Ä–µ–º–µ–Ω–Ω–æ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª–µ'
                                  ' —Ä–æ—Å—Ç –æ–¥–Ω–æ–≥–æ –∞–∫—Ç–∏–≤–∞ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–∞–µ—Ç—Å—è –ø–∞–¥–µ–Ω–∏–µ–º –≤—Ç–æ—Ä–æ–≥–æ –∏ –Ω–∞–æ–±–æ—Ä–æ—Ç.\n'
                                  '–≠—Ç–æ —Ç–æ—Ç —Å–∞–º—ã–π —Å–ª—É—á–∞–π –∫ –∫–æ—Ç–æ—Ä–æ–º—É –Ω–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å—Ç—Ä–µ–º–∏—Ç—å—Å—è, —Å–ª–µ–¥—É—è –∏–¥–µ–µ '
                                  '*–¥–∏–≤–µ—Ä—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏.*')


def sharp(ticker, cov_matrix, mean_returns, update, context):
    # —Å–æ–∑–¥–∞–µ–º –º–∞—Å—Å–∏–≤ –∏–∑ –Ω—É–ª–µ–π
    num_iterations = 10000
    simulation_res = np.zeros((4 + len(ticker) - 1, num_iterations))

    # —Å–∞–º–∞ –∏—Ç–µ—Ä–∞—Ü–∏—è
    for i in range(num_iterations):
        # –í—ã–±—Ä–∞—Ç—å —Å–ª—É—á–∞–π–Ω—ã–µ –≤–µ—Å–∞ –∏ –Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞—Ç—å, —á—Ç–æ–± —Å—É–º–º–∞ —Ä–∞–≤–Ω—è–ª–∞—Å—å 1
        weights = np.array(np.random.random(len(ticker)))
        weights /= np.sum(weights)

        # –í—ã—á–∏—Å–ª–∏—Ç—å –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å –∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ
        portfolio_return = np.sum(mean_returns * weights)
        portfolio_std_dev = np.sqrt(np.dot(weights.T, np.dot(cov_matrix, weights)))

        # –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤—Å–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –≤ –º–∞—Å—Å–∏–≤
        simulation_res[0, i] = portfolio_return
        simulation_res[1, i] = portfolio_std_dev

        # –í—ã—á–∏—Å–ª–∏—Ç—å –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –®–∞—Ä–ø–∞ –∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å
        simulation_res[2, i] = simulation_res[0, i] / simulation_res[1, i]

        # –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤–µ—Å–∞
        for j in range(len(weights)):
            simulation_res[j + 3, i] = weights[j]

    # —Å–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –º–∞—Å—Å–∏–≤ –≤ DataFrame –¥–ª—è –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∏ –∞–Ω–∞–ª–∏–∑–∞.
    sim_frame = pd.DataFrame(simulation_res.T, columns=['ret', 'stdev', 'sharp'] + ticker)

    # —É–∑–Ω–∞—Ç—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π sharp Ratio
    max_sharp = sim_frame.iloc[sim_frame['sharp'].idxmax()]

    # —É–∑–Ω–∞—Ç—å –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ
    min_std = sim_frame.iloc[sim_frame['stdev'].idxmin()]

    fig, ax = plt.subplots(figsize=(10, 10))
    plt.scatter(sim_frame.stdev, sim_frame.ret, c=sim_frame.sharp, cmap='RdYlBu')
    plt.xlabel('–í–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç—å')
    plt.ylabel('–î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å')

    plt.scatter(max_sharp[1], max_sharp[0], marker="o", color='r', s=300)
    plt.scatter(min_std[1], min_std[0], marker="o", color='b', s=300)
    plt.savefig('sharp.png')
    plt.close()

    # —Å–æ–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –≤—ã–≤–æ–¥–∞
    best_sharp_msg = ''
    best_std_msg = ''
    for i in ticker:
        best_sharp_msg += '{}: {}%\n'.format(i, round(100*max_sharp[i]))
        best_std_msg += '{}: {}%\n'.format(i, round(100*min_std[i]))

    context.bot.send_message(chat_id=update.effective_chat.id,
                             parse_mode=telegram.ParseMode.MARKDOWN,
                             text='*–û–ø—Ç–∏–º–∞–ª—å–Ω—ã–µ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏—è –∞–∫—Ü–∏–π –≤ –ø–æ—Ä—Ç—Ñ–µ–ª–µ*')

    context.bot.send_photo(chat_id=update.effective_chat.id,
                           photo=open('sharp.png', 'rb'),
                           parse_mode=telegram.ParseMode.MARKDOWN)

    context.bot.send_message(chat_id=update.effective_chat.id,
                             parse_mode=telegram.ParseMode.MARKDOWN,
                             text='üî¥ - _–õ—É—á—à–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–∞ –®–∞—Ä–ø–∞_\n'
                                  '*–î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å:* {}\n'
                                  '*–í–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç—å:* {}\n'
                                  '*–ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –®–∞—Ä–ø–∞:* {}\n'
                                  '*–ü–æ—Ä—Ç—Ñ–µ–ª—å:*\n{}\n\n'
                                  'üîµ - _–°–∞–º—ã–π –Ω–∏–∑–∫–∏–π —Ä–∏—Å–∫_\n'
                                  '*–î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å:* {}\n'
                                  '*–í–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç—å:* {}\n'
                                  '*–ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –®–∞—Ä–ø–∞:* {}\n'
                                  '*–ü–æ—Ä—Ç—Ñ–µ–ª—å:*\n{}\n\n'
                                  ''.format(round(max_sharp['ret'], 5),
                                            round(max_sharp['stdev'], 5),
                                            round(max_sharp['sharp'], 5),
                                            best_sharp_msg,
                                            round(min_std['ret'], 5),
                                            round(min_std['stdev'], 5),
                                            round(min_std['sharp'], 5),
                                            best_std_msg))


def db_write_queries(data_dic):
    summary = Queries(
        user_id=data_dic[0],
        first_name=data_dic[1],
        last_name=data_dic[2],
        username=data_dic[3],
        message=data_dic[4])
    session.add(summary)

    # pushing data to db
    session.commit()
    session.close()


def start(update, context):
    db_write_queries(
        [
            update.effective_user.id,
            update.message.from_user.first_name,
            update.message.from_user.last_name,
            update.message.from_user.username,
            update.message.text])

    context.bot.send_message(chat_id=update.effective_chat.id,
                             parse_mode=telegram.ParseMode.MARKDOWN,
                             text='–ü—Ä–∏–≤–µ—Ç, —è –Ω–µ–±–æ–ª—å—à–æ–π —Ç–µ–ª–µ–≥—Ä–∞–º–º –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø—ã—Ç–∞–µ—Ç—Å—è –ø–æ–º–æ—á—å'
                                  ' –Ω–∞—á–∏–Ω–∞—é—â–∏–º –∏–Ω–≤–µ—Å—Ç–æ—Ä–∞–º –±—ã—Ç—å –±–æ–ª–µ–µ –æ—Å–º—ã—Å–ª–µ–Ω–Ω—ã–º–∏.\n\n'
                                  'üî∑ –ú–æ–∂–Ω–æ –¥–æ–ª–≥–æ —Å–ø–æ—Ä–∏—Ç—å –æ–± —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —Ç–æ—Ä–≥–æ–≤—ã—Ö —Å—Ç—Ä–∞—Ç–µ–≥–∏–π, '
                                  '–Ω–æ –º–æ—ë —Å—É–±—ä–µ–∫—Ç–∏–≤–Ω–æ–µ –≤–∏–¥–µ–Ω–∏–µ –∑–∞–∫–ª—é—á–∞–µ—Ç—Å—è –≤ —Ç–æ–º, —á—Ç–æ –Ω–∞–∏–±–æ–ª–µ–µ '
                                  '—Ä–∞–∑—É–º–Ω–æ –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ —Å–ª–µ–¥–æ–≤–∞—Ç—å –∏–¥–µ–µ *–ø–æ—Ä—Ç—Ñ–µ–ª—å–Ω–æ–≥–æ –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è*, '
                                  '—Å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–π *–¥–∏–≤–µ—Ä—Å–∏—Ñ–∏–∫–∞—Ü–∏–µ–π –≤–ª–æ–∂–µ–Ω–∏–π*.\n\n'
                                  'üî∑ –ü—Ä–æ—Å—Ç—ã–º —è–∑—ã–∫–æ–º —ç—Ç–æ –∑–Ω–∞—á–∏—Ç, —á—Ç–æ ¬´–Ω–µ –Ω—É–∂–Ω–æ –¥–µ—Ä–∂–∞—Ç—å –≤—Å–µ —è–π—Ü–∞ '
                                  '–≤ –æ–¥–Ω–æ–π –∫–æ—Ä–∑–∏–Ω–µ¬ª.\n'
                                  '–ê –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ –∞–∫—Ç–∏–≤–æ–≤ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ–≤–∞—Ç—å—Å—è –≤—ã–±–æ—Ä–æ–º –∫–æ–º–ø–∞–Ω–∏–π –∏–∑ —Ä–∞–∑–Ω—ã—Ö —Å—Ç—Ä–∞–Ω '
                                  '–∏ —Å–µ–∫—Ç–æ—Ä–æ–≤ —ç–∫–æ–Ω–æ–º–∏–∫–∏.\n\n'
                                  'üî∑ –ö–ª—é—á–µ–≤—ã–º –≤ –¥–∞–Ω–Ω–æ–π —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ —è–≤–ª—è–µ—Ç—Å—è –ø—Ä–æ–≤–µ—Ä–∫–∞ *—Å—Ç–µ–ø–µ–Ω–∏ –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–∏* –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö '
                                  '–∞–∫—Ç–∏–≤–æ–≤.\n'
                                  '–ó–≤—É—á–∏—Ç —Å—Ç—Ä–∞—à–Ω–æ, –Ω–æ –∏–¥–µ—è –æ—á–µ–Ω—å –ø—Ä–æ—Å—Ç–∞.\n'
                                  '–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–±–∏—Ä–∞—Ç—å –∞–∫—Ç–∏–≤—ã '
                                  '—Ç–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, —á—Ç–æ–±—ã –∏—Ö *–∫–æ—Ä—Ä–µ–ª—è—Ü–∏—è* –±—ã–ª–∞ –º–∏–Ω–∏–º–∞–ª—å–Ω–∞, '
                                  '–∞ –≤ –∏–¥–µ–∞–ª–µ - ¬´–æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–∞¬ª.\n\n'
                                  'üî∑ –ß—Ç–æ –∂–µ —Ç–∞–∫–æ–µ *–∫–æ—Ä—Ä–µ–ª—è—Ü–∏—è*?\n'
                                  '*–ö–æ—Ä—Ä–µ–ª—è—Ü–∏—è* - —ç—Ç–æ –≤–∑–∞–∏–º–æ—Å–≤—è–∑—å –¥–≤—É—Ö —Å–ª—É—á–∞–π–Ω—ã—Ö –≤–µ–ª–∏—á–∏–Ω'
                                  ' (–≤ –Ω–∞—à–µ–º —Å–ª—É—á–∞–µ —Ü–µ–Ω), –ø–æ–∫–∞–∑—ã–≤–∞—é—â–∞—è –∫–∞–∫ —Å–∏–ª—å–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –æ–¥–Ω–æ–π –∏–∑ –≤–µ–ª–∏—á–∏–Ω,'
                                  ' ¬´—Å–æ–ø—Ä–æ–≤–æ–∂–¥–∞–µ—Ç—Å—è¬ª –∏–∑–º–µ–Ω–µ–Ω–∏–µ–º –≤—Ç–æ—Ä–æ–π. *–ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–∏* –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏—è '
                                  '*–æ—Ç -1 '
                                  ' –¥–æ 1*, –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–∏–ª—É —ç—Ç–æ–π —Å–≤—è–∑–∏.\n\n'
                                  'üî∂ –ó–Ω–∞—á–µ–Ω–∏–µ *¬´1¬ª* - —ç—Ç–æ —Å–∏–ª—å–Ω–∞—è *–ø—Ä—è–º–∞—è –∫–æ—Ä—Ä–µ–ª—è—Ü–∏—è*, –≥–æ–≤–æ—Ä—è—â–∞—è –Ω–∞–º –æ —Ç–æ–º, '
                                  '—á—Ç–æ –Ω–∞ –∑–∞–¥–∞–Ω–Ω–æ–º '
                                  '–≤—Ä–µ–º–µ–Ω–Ω–æ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª–µ'
                                  ' —Ä–æ—Å—Ç/–ø–∞–¥–µ–Ω–∏–µ–º –æ–¥–Ω–æ–≥–æ –∞–∫—Ç–∏–≤–∞ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–∞–µ—Ç—Å—è —Ä–æ—Å—Ç–æ–º/–ø–∞–¥–µ–Ω–∏–µ–º –≤—Ç–æ—Ä–æ–≥–æ.\n'
                                  '–í –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ —Ñ–æ–Ω–¥–æ–≤–æ–≥–æ —Ä—ã–Ω–∫–∞ —ç—Ç–æ –æ—á–µ–Ω—å —Ä–∏—Å–∫–æ–≤–∞–Ω–æ –∏ –∫–∞–∫ —Ä–∞–∑ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç —Å–∏—Ç—É–∞—Ü–∏—é '
                                  '¬´—Ö—Ä–∞–Ω–µ–Ω–∏—è —è–∏—Ü –≤ –æ–¥–Ω–æ–π –∫–æ—Ä–∑–∏–Ω–µ¬ª.\n\n'
                                  'üî∂ –ó–Ω–∞—á–µ–Ω–∏–µ *¬´-1¬ª* - —ç—Ç–æ —Å–∏–ª—å–Ω–∞—è *–æ–±—Ä–∞—Ç–Ω–∞—è –∫–æ—Ä—Ä–µ–ª—è—Ü–∏—è*, –≥–æ–≤–æ—Ä—è—â–∞—è –Ω–∞–º –æ —Ç–æ–º, '
                                  '—á—Ç–æ –Ω–∞ –∑–∞–¥–∞–Ω–Ω–æ–º '
                                  '–≤—Ä–µ–º–µ–Ω–Ω–æ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª–µ'
                                  ' —Ä–æ—Å—Ç –æ–¥–Ω–æ–≥–æ –∞–∫—Ç–∏–≤–∞ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–∞–µ—Ç—Å—è –ø–∞–¥–µ–Ω–∏–µ–º –≤—Ç–æ—Ä–æ–≥–æ –∏ –Ω–∞–æ–±–æ—Ä–æ—Ç.\n'
                                  '–≠—Ç–æ —Ç–æ—Ç —Å–∞–º—ã–π —Å–ª—É—á–∞–π –∫ –∫–æ—Ç–æ—Ä–æ–º—É –Ω–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å—Ç—Ä–µ–º–∏—Ç—å—Å—è, —Å–ª–µ–¥—É—è –∏–¥–µ–µ '
                                  '*–¥–∏–≤–µ—Ä—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏.*')

    context.bot.send_message(chat_id=update.effective_chat.id,
                             parse_mode=telegram.ParseMode.MARKDOWN,
                             text='¬´–í–∏—à–µ–Ω–∫–æ–π –Ω–∞ —Ç–æ—Ä—Ç–µ¬ª –¥–∞–Ω–Ω–æ–π —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ —è–≤–ª—è–µ—Ç—Å—è –∏–¥–µ—è,'
                                  ' –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω–∞—è –Ω–æ–±–µ–ª–µ–≤—Å–∫–∏–º –ª–∞—É—Ä–µ–∞—Ç–æ–º *–£–ª—å—è–º–æ–º –®–∞—Ä–ø–æ–º*.\n\n'
                                  'üî∑ –ò–º –±—ã–ª–æ –ø–æ–∫–∞–∑–∞–Ω–æ, —á—Ç–æ –ø—Ä–∏ ¬´–ø—Ä–∞–≤–∏–ª—å–Ω–æ–º¬ª —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–∏ –∞–∫—Ç–∏–≤–æ–≤'
                                  ' –≤ –ø–æ—Ä—Ç—Ñ–µ–ª–µ, –æ–¥–Ω–∞ –∏ —Ç–∞ –∂–µ *–¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å* (—Å–º. –≤–∏–∫–∏) –º–æ–∂–µ—Ç –±—ã—Ç—å'
                                  ' –¥–æ—Å—Ç–∏–≥–Ω—É—Ç–∞ –ø—Ä–∏ —Ä–∞–∑–Ω–æ–π *—Å—Ç–µ–ø–µ–Ω–∏ —Ä–∏—Å–∫–∞* (–≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç–∏).\n\n'
                                  'üî∑ –î–ª—è –≤—ã–±–æ—Ä–∞ —ç—Ç–æ–≥–æ –Ω–∞–∏–±–æ–ª–µ–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–≥–æ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏—è –ø—Ä–∏–Ω—è—Ç–æ '
                                  '–∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ–¥–Ω–æ–∏–º—ë–Ω–Ω—ã–π *–∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –®–∞—Ä–ø–∞*. –û–Ω –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç '
                                  '–∏–∑–±—ã—Ç–æ—á–Ω–æ—Å—Ç—å –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç–∏ –ø–æ—Ä—Ç—Ñ–µ–ª—è –Ω–∞ –µ–¥–∏–Ω–∏—Ü—É —Ä–∏—Å–∫–∞ (—Å–º. –≤–∏–∫–∏)\n\n'
                                  '–ù–∞ –º–æ–π –≤–∑–≥–ª—è–¥, –¥–≤–∞ –æ–ø–∏—Å–∞–Ω–Ω—ã—Ö –≤—ã—à–µ —à–∞–≥–∞, —É–∂–µ –¥–∞–¥—É—Ç –Ω–µ–ø–ª–æ—Ö–æ–µ'
                                  ' –ø–æ–¥—Å–ø–æ—Ä—å–µ –∫ ¬´–æ—Å–º—ã—Å–ª–µ–Ω–Ω—ã–º¬ª –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏—è–º, –∞ —è –í–∞–º –≤ —ç—Ç–æ–º –ø–æ–º–æ–≥—É)\n\n'
                                  '–û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–µ —Ç–∏–∫–µ—Ä—ã (—Å–º. –≤–∏–∫–∏) –∫–æ–º–ø–∞–Ω–∏–π, –∞ —è'
                                  ' –ø–æ—Å—Ç—Ä–æ—é –¥–ª—è –í–∞—Å –º–∞—Ç—Ä–∏—Ü—É –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–∏ –∏ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç–∏ –æ—Ç —Ä–∏—Å–∫–æ–≤.\n\n'
                                  '*–î–ª—è —Ä–æ—Å—Å–∏–π—Å–∫–∏—Ö –∫–æ–º–ø–∞–Ω–∏–π, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–º –Ω–∞ –ú–æ—Å–ë–∏—Ä–∂–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ'
                                  ' –¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–µ—Ñ–∏–∫—Å ¬´.ME¬ª*\n'
                                  '_–ù–∞–ø—Ä–∏–º–µ—Ä: AAPL, GAZP.ME, FIVE.ME, AMZN_')


def sharp_n_matrix(update, context):
    msg_text = update.message.text.upper()
    try:
        db_write_queries(
            [
                update.effective_user.id,
                update.message.from_user.first_name,
                update.message.from_user.last_name,
                update.message.from_user.username,
                update.message.text])

        ticker = msg_text.replace(' ', '').strip().split(',')
        stock = yf.download(ticker, datetime.today() - timedelta(days=365), datetime.today())

        all_adj_close = stock[['Adj Close']]

        if not all_adj_close.empty and (all_adj_close.isnull().values.sum() < .5 * all_adj_close.size):
            # –ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å
            all_returns = all_adj_close.pct_change()

            # –ú–∞—Ç—Ä–∏—Ü—ã –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–∏ –∏ –∫–æ–≤–∞—Ä–∏–∞—Ü–∏–∏
            corr_matrix = all_returns.corr()
            cov_matrix = all_returns.corr()

            # –°—Ä–µ–¥–Ω—è—è –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å –∑–∞ –¥–µ–Ω—å
            all_returns_mean = all_returns.mean()

            # –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–æ–≤
            sharp(ticker, cov_matrix, all_returns_mean, update, context)
            time.sleep(3)
            matrix(corr_matrix, update, context)
        else:
            context.bot.send_message(chat_id=update.effective_chat.id,
                                     parse_mode=telegram.ParseMode.MARKDOWN,
                                     text='–î–∞–Ω–Ω—ã–µ –ø–æ –æ–¥–Ω–æ–π –∏–∑ –∫–æ–º–ø–∞–Ω–∏–π —Å–ø–∏—Å–∫–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç,'
                                          ' –ª–∏–±–æ –í—ã –æ—à–∏–±–ª–∏—Å—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ –≤–≤–æ–¥–∞.\n'
                                          '–í–≤–µ–¥–∏—Ç–µ —Ç–∏–∫–µ—Ä—ã –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏—Ö –í–∞—Å –∫–æ–º–ø–∞–Ω–∏–π —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é\n\n'
                                          '_–ù–∞–ø—Ä–∏–º–µ—Ä: AAPL, GAZP.ME, AMZN_')
    except:
        logging.exception("Error")
        context.bot.send_message(chat_id=update.effective_chat.id,
                                 parse_mode=telegram.ParseMode.MARKDOWN,
                                 text='–î–∞–Ω–Ω—ã–µ –ø–æ –æ–¥–Ω–æ–π –∏–∑ –∫–æ–º–ø–∞–Ω–∏–π —Å–ø–∏—Å–∫–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç,'
                                      ' –ª–∏–±–æ –í—ã –æ—à–∏–±–ª–∏—Å—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ –≤–≤–æ–¥–∞.\n'
                                      '–í–≤–µ–¥–∏—Ç–µ —Ç–∏–∫–µ—Ä—ã –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏—Ö –í–∞—Å –∫–æ–º–ø–∞–Ω–∏–π —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é\n\n'
                                      '_–ù–∞–ø—Ä–∏–º–µ—Ä: AAPL, GAZP.ME, AMZN_')


updater.dispatcher.add_handler(CommandHandler('start', start))
text_handler = MessageHandler(Filters.text, sharp_n_matrix)
updater.dispatcher.add_handler(text_handler)

updater.start_polling()
updater.idle()
